version: "3"

services:
  adminer:
    image: adminer:4.8.1-standalone
    restart: always
    ports:
      - 8070:8080
    networks:
      - listmonk-dev

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # UI
    networks:
      - listmonk-dev

  db:
    image: postgres:13
    ports:
      - "5440:5432"
    networks:
      - listmonk-dev
    environment:
      - POSTGRES_PASSWORD=listmonk-dev
      - POSTGRES_USER=listmonk-dev
      - POSTGRES_DB=listmonk-dev
    restart: unless-stopped
    volumes:
      - ./listmonk-dev-db:/var/lib/postgresql/data

  front:
    build:
      context: .
      dockerfile: app.Dockerfile
    command: ["make", "run-frontend"]
    ports:
      - "8080:8080"
    environment:
      - LISTMONK_API_URL=http://backend:9000
    depends_on:
      - db
    volumes:
      - ../:/app
    networks:
      - listmonk-dev

  backend:
    build:
      context: .
      dockerfile: app.Dockerfile
    # command: ["make", "run-backend-docker"]
    command: [sh, -c, "./listmonk --install --idempotent --yes --config /listmonk/config.toml && ./listmonk --upgrade --yes --config /listmonk/config.toml && ./listmonk --config /listmonk/config.toml"]

    ports:
      - "9000:9000"
    depends_on:
      - db

    volumes:
      - ../:/app
      - ./pkg/mod/cache:/go/pkg/mod/cache 
      - ./config.toml:/listmonk/config.toml
    networks:
      - listmonk-dev


  # proxy:
  #   container_name: proxy
  #   hostname: 'proxy'
  #   restart: always
  #   image: "nginx:latest"
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  #   volumes:
  #     - ../nginx/conf:/etc/nginx/conf.d
  #     - ../:/usr/src/app/
  #     - ../nginx/logs:/var/log/nginx/ 
  #     - ../data/certbot/conf:/etc/letsencrypt
  #     - ../data/certbot/www:/var/www/certbot
  #   #- ./logs:/var/log/proxy
  #   networks:
  #     - listmonk-dev
  #   ports:
  #     - 88:80
  #     # - 443:443
  #   depends_on: 
  #     - front  

  # certbot:
  #   container_name: certbot
  #   hostname: 'certbot'
  #   image: certbot/certbot
  #   volumes: 
  #     - ../data/certbot/conf:/etc/letsencrypt
  #     - ../data/certbot/www:/var/www/certbot
  #   #- ./logs:/var/log/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 48h & wait $${!}; done;'"
  #   depends_on: 
  #     - proxy
  #     - front
  #   networks:
  #     - listmonk-dev
 

networks:
  listmonk-dev:
